jobs:
- job: Packages_Validation
  dependsOn: Packages

  pool:
    vmImage: 'windows-2022'

  variables:
    - name: UseDotNetNativeToolchain
      value: false

  steps:
  - checkout: self
    clean: 'true'

  - task: gitversion/setup@0
    inputs:
      versionSpec: '5.6.8'

  - task: gitversion/execute@0
    inputs:
      useConfigFile: true
      configFilePath: build/ci/gitversion.yml
    displayName: Use GitVersion

  # - task: UseDotNet@2
  #   displayName: 'Use .NET 5.0.x'
  #   inputs:
  #     packageType: sdk
  #     version: 5.0.x

  - template: templates/dotnet6-install-windows.yml
  - template: templates/install-windows-sdk.yml
    parameters:
      sdkVersion: 18362

  - task: DownloadBuildArtifacts@0
    inputs:
      artifactName: $(Build.DefinitionName)

  - script: |
        md $(Build.SourcesDirectory)\src\PackageCache
        copy $(System.ArtifactsDirectory)\$(Build.DefinitionName)\nuget\*.nupkg $(Build.SourcesDirectory)\src\PackageCache
    displayName: Copy Artifacts to PackageCache

  - script: dotnet new -i $(System.ArtifactsDirectory)\$(Build.DefinitionName)\nuget\Uno.Extensions.Templates*.nupkg
    displayName: Install Project Templates

  - powershell: |
        dotnet nuget add source -n nuget_local $(Build.SourcesDirectory)\src\PackageCache
        $msbuild = vswhere -prerelease -requires Microsoft.Component.MSBuild -find MSBuild\**\Bin\MSBuild.exe
        Set-PSDebug -Trace 1
        $ErrorActionPreference = 'Stop'

        # Create app with defaults
        dotnet new unoapp-extensions -o UnoApp01
        cd UnoApp01
        & $msbuild /r /m UnoApp01.sln
        if ($LASTEXITCODE -ne 0)
        {
            throw "Exit code must be zero."
        }
        cd ..

        # Create app without reactive extensions
        dotnet new unoapp-extensions -o UnoAppNoReactive01 --reactive false
        cd UnoAppNoReactive01
        & $msbuild /r /m UnoAppNoReactive01.sln
        if ($LASTEXITCODE -ne 0)
        {
            throw "Exit code must be zero."
        }
        cd ..

        # Create app with cpm enabled
        dotnet new unoapp-extensions -o UnoAppCPM01 --cpm true
        cd UnoAppCPM01
        & $msbuild /r /m UnoAppCPM01.sln
        if ($LASTEXITCODE -ne 0)
        {
            throw "Exit code must be zero."
        }
        cd ..

    displayName: Build template app
