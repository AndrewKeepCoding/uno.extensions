<Project Sdk="Microsoft.NET.Sdk">

	<PropertyGroup>
		<TargetFramework>netstandard2.0</TargetFramework>
		<IsTool>true</IsTool>
		<IncludeBuildOutput>false</IncludeBuildOutput>
		<PackageType>Template</PackageType>
		<ContentTargetFolders>content</ContentTargetFolders>
		<EnableDefaultItems>False</EnableDefaultItems>

		<!-- required for .vsconfig -->
		<NoDefaultExcludes>true</NoDefaultExcludes>

		<!-- Disable package generation for WinUI converted build -->
		<IsPackable Condition="'$(UNO_UWP_BUILD)'=='false'">false</IsPackable>
	</PropertyGroup>

	<PropertyGroup>
		<Authors>nventive</Authors>
		<PackageProjectUrl>https://github.com/unoplatform/uno.extensions</PackageProjectUrl>
		<PackageIconUrl>https://nv-assets.azurewebsites.net/logos/uno.png</PackageIconUrl>
		<RepositoryUrl>https://github.com/unoplatform/uno.extensions</RepositoryUrl>
		<Description>Quickstart template for using Uno Extensions.</Description>
		<GeneratePackageOnBuild Condition="'$(Configuration)'=='Release'">true</GeneratePackageOnBuild>
		<PackageTags>dotnet-new;templates;uno-platform;webassembly;ios;android;winui;macos;uno-extensions</PackageTags>
		<NoWarn>$(NoWarn);NU5128</NoWarn>
	</PropertyGroup>

	<ItemGroup>
		<UpToDateCheckInput Include="content\**" />
		<Content Include="content/**/*"
				Exclude="**/obj/**;**/bin/**;**/*.Debugging.sln"
				KeepDuplicates="False"
				PackagePath="content"
				Pack="true" />
		<Content Include="content/unoapp-extensions/MyExtensionsApp.Windows/app.manifest"
				PackagePath="content/unoapp-extensions/MyExtensionsApp.Skia.Gtk/app.manifest"
				Pack="true" />
		<Content Include="content/unoapp-extensions/MyExtensionsApp.Windows/Images/StoreLogo.png"
				PackagePath="content/unoapp-extensions/MyExtensionsApp.Skia.Gtk/Images/StoreLogo.png"
				Pack="true" />
		<Content Include="content/unoapp-extensions/MyExtensionsApp.Windows/app.manifest"
				PackagePath="content/unoapp-extensions/MyExtensionsApp.Skia.Linux.FrameBuffer/app.manifest"
				Pack="true" />
		<Content Include="content/unoapp-extensions/MyExtensionsApp.Windows/Images/StoreLogo.png"
				PackagePath="content/unoapp-extensions/MyExtensionsApp.Skia.Linux.FrameBuffer/Images/StoreLogo.png"
				Pack="true" />
		<_AllCSProjFiles Include="content/**/*.csproj" />
		<_AllCSProjFiles Include="content/**/Directory.Packages.props" />
	</ItemGroup>

	<Target Name="ReplaceVersions" BeforeTargets="BeforeBuild">

		<ReplaceFileText Filename="%(_AllCSProjFiles.Identity)"
					MatchExpression="Version=&quot;255.255.255.255&quot;"
					ReplacementText="Version=&quot;$(PackageVersion)&quot;" />

	</Target>

	<Target Name="ResetVersions" AfterTargets="AfterBuild;Pack">

		<ReplaceFileText Filename="%(_AllCSProjFiles.Identity)"
					MatchExpression="Version=&quot;$(PackageVersion)&quot;"
					ReplacementText="Version=&quot;255.255.255.255&quot;" />

	</Target>

	<!-- Using Regex Replace prevents XmlPoke from replacing Tabs with Spaces -->
	<UsingTask TaskName="ReplaceFileText"
			TaskFactory="RoslynCodeTaskFactory"
			AssemblyFile="$(MSBuildToolsPath)\Microsoft.Build.Tasks.Core.dll">
		<ParameterGroup>
			<Filename ParameterType="System.String" Required="true" />
			<MatchExpression ParameterType="System.String" Required="true" />
			<ReplacementText ParameterType="System.String" Required="true" />
		</ParameterGroup>
		<Task>
			<Using Namespace="System" />
			<Using Namespace="System.IO" />
			<Using Namespace="System.Text.RegularExpressions" />
			<Code Type="Fragment" Language="cs">
				<![CDATA[
					File.WriteAllText(
						Filename,
						Regex.Replace(File.ReadAllText(Filename), MatchExpression, ReplacementText)
						);
				]]>
			</Code>
		</Task>
	</UsingTask>
</Project>
